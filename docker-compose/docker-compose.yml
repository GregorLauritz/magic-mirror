version: "3.9"
name: magic-mirror
services:
  frontend:
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
    depends_on:
      - backend
      - nginx
    env_file:
      - frontend.env
      - host.env
    networks:
      - nginx
  nginx:
    build:
      context: ../nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    networks:
      - nginx
    env_file:
      - host.env
  backend:
    build:
      context: ../backend
      dockerfile: docker/Dockerfile
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
        NODE_ENV: production
    depends_on:
      - nginx
      - mongodb
    env_file:
      - backend.env
      - host.env
    networks:
      - nginx
      - db
      - loki
    environment:
      MONGO_USERNAME: ${MONGO_ROOT_USER}
      MONGO_PASSWORD: ${MONGO_ROOT_PW}
  mongodb:
    image: mongo
    restart: always
    volumes:
      - ../mongodb/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PW}
    networks:
      - db
  loki:
    image: grafana/loki:2.7.3
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
  grafana:
    build: ../grafana
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    depends_on:
      - loki
    ports:
      - "3000:3000"
    networks:
      - loki

networks:
  nginx:
  db:
  loki:
