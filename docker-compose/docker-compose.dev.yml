name: magic-mirror-dev
services:
  frontend:
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile.dev
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
    hostname: frontend
    volumes:
      - ../frontend/src:/opt/src
      - ../frontend/public:/opt/public
    ports:
      - 3000:3000
    depends_on:
      - backend
      - oauth2-proxy
    env_file:
      - frontend.env
    networks:
      - nginx
  backend:
    build:
      context: ../backend
      dockerfile: docker/Dockerfile.dev
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
        NODE_ENV: development
    hostname: backend
    depends_on:
      - oauth2-proxy
      - mongo
    volumes:
      - ../backend/src:/opt/src
      - ../backend/ssl:/etc/express
    env_file:
      - backend.env
    networks:
      - nginx
      - db
    environment:
      MONGO_USERNAME: ${MONGO_ROOT_USER}
      MONGO_PASSWORD: ${MONGO_ROOT_PW}
  mongo:
    image: mongo
    restart: unless-stopped
    hostname: mongo
    volumes:
      - ../mongo:/data/db
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PW}
    networks:
      - db
  oauth2-proxy:
    build:
      context: ../oauth2-proxy
    command: --config=/opt/conf/oauth2-proxy.cfg
    ports:
      - 443:443
    restart: unless-stopped
    networks:
      - nginx
    env_file:
      - proxy.env

networks:
  nginx:
  db:
