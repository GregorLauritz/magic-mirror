version: "3.9"
name: magic-mirror-dev
services:
  frontend:
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile.dev
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
    volumes:
      - ../frontend/src:/opt/src
      - ../frontend/public:/opt/public
    depends_on:
      - middleware
      - nginx
    env_file:
      - frontend.env
    networks:
      - nginx
  nginx:
    build:
      context: ../nginx
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - ../nginx/conf/:/etc/nginx/conf.d/:ro
      - ../nginx/ssl/:/etc/ssl/:ro
    networks:
      - nginx
  middleware:
    build:
      context: ../middleware
      dockerfile: docker/Dockerfile.dev
      args:
        NODE_IMG_VERSION: ${NODE_IMG_VERSION}
    depends_on:
      - nginx
      - mongo
    volumes:
      - ../middleware/src:/opt/src
      - ../middleware/ssl:/etc/express
    env_file:
      - middleware.env
    networks:
      - nginx
      - db
      - loki
    environment:
      MONGO_USERNAME: ${MONGO_ROOT_USER}
      MONGO_PASSWORD: ${MONGO_ROOT_PW}
  mongo:
    image: mongo
    restart: always
    volumes:
      - ../mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PW}
    networks:
      - db
  loki:
    image: grafana/loki:2.7.3
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
  # promtail:
  #   image: grafana/promtail:2.7.3
  #   volumes:
  #     - ../loki:/var/log
  #   command: -config.file=/etc/promtail/config.yml
  #   networks:
  #     - loki
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki

networks:
  nginx:
  db:
  loki: